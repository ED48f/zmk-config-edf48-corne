/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        LSHIFT_LCTRLCAPSL_TD: LSHIFT_LCTRLCAPSL_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "LSHIFT_LCTRLCAPSL_TD";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp LCTRL>, <&kp CAPSLOCK>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ACAD_LAY {
            bindings = <&mo 6>;
            key-positions = <37 38>;
        };

        MAX3DS_LAY {
            bindings = <&mo 7>;
            key-positions = <38 39>;
        };

        FPS_G_LAY {
            bindings = <&tog 4>;
            key-positions = <41 40>;
        };

        RPG_G_LAY {
            bindings = <&tog 5>;
            key-positions = <42 41>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //              |     | GUI | LWR | SPC |   | ENT | RSE  | ALT |     |

            bindings = <
&kp ESCAPE             &kp Q  &kp W              &kp F  &kp P  &kp B      &kp J    &kp L  &kp U      &kp Y         &kp SEMICOLON  &kp BSPC
&kp TAB                &kp A  &kp R              &kp S  &kp T  &kp G      &kp M    &kp N  &kp E      &kp I         &kp O          &kp SQT
&LSHIFT_LCTRLCAPSL_TD  &kp Z  &kp X              &kp C  &kp D  &kp V      &kp K    &kp H  &kp COMMA  &kp DOT       &kp FSLH       &kp LGUI
                              &ext_power EP_TOG  &mo 3  &mo 1  &kp SPACE  &kp RET  &mo 2  &kp RALT   &out OUT_TOG
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN_ARROW>,
                <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;

            label = "DEFAULT";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //              |     | GUI |     | SPC |   | ENT |     | ALT |     |

            bindings = <
&kp GRAVE       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5        &kp N6  &kp N7  &kp N8    &kp N9  &kp N0   &kp MINUS
&kp LEFT_SHIFT  &kt F1        &kt F2        &kt F3        &kt F4        &kt F5        &kt F6  &kt F7  &kt F8    &kt F9  &kt F10  &kt F11
&kp LCTRL       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none   &none   &none     &none   &none    &bt BT_CLR
                              &none         &none         &none         &trans        &trans  &none   &kp RALT  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>,
                <&inc_dec_kp PG_UP PG_DN>;

            label = "RAISE . BT";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //              |     | GUI |     | SPC |   | ENT |     | ALT |     |

            bindings = <
&kp TILDE   &kp EXCL  &kp AT                  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET        &kp AMPS         &kp ASTERISK     &kp LPAR          &kp RPAR         &kp UNDERSCORE
&sk LSHIFT  &none     &none                   &none     &none     &none      &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD   &none            &none
&kp LCTRL   &none     &none                   &none     &none     &none      &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD   &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
                      &kp C_BACKLIGHT_TOGGLE  &none     &none     &trans     &trans           &none            &kp RALT         &kp C_PLAY_PAUSE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;

            label = "LOWER . RGB";
        };

        NUM_LAYER {
            bindings = <
&kp PLUS  &kp MINUS  &kp N7  &kp N8  &kp N9  &trans     &kp K_COFFEE  &kp PRINTSCREEN  &kp UP         &trans     &trans  &kp DEL
&kp STAR  &kp FSLH   &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp K_SLEEP   &kp LEFT         &kp DOWN       &kp RIGHT  &trans  &trans
&trans    &trans     &kp N1  &kp N2  &kp N3  &kp N0     &trans        &trans           &trans         &trans     &trans  &trans
                     &trans  &trans  &trans  &trans     &trans        &trans           &kp RIGHT_ALT  &trans
            >;

            label = "NUM MISC";
            sensor-bindings =
                <&inc_dec_kp C_AC_FORWARD C_AC_BACK>,
                <&inc_dec_kp C_AC_SCROLL_DOWN C_AC_SCROLL_UP>;
        };

        FPS_LAYER {
            bindings = <
&kp TAB  &kp F      &kp Q  &kp W      &kp E      &kp N1  &kp F1  &none  &none  &none  &none  &none
&kp B    &kp V      &kp A  &kp S      &kp D      &kp N2  &none   &none  &none  &none  &none  &none
&none    &kp LCTRL  &none  &kp C      &kp R      &kp N3  &none   &kp H  &none  &none  &none  &to 0
                    &none  &kp LSHFT  &kp SPACE  &trans  &trans  &mo 3  &mo 0  &none
            >;

            label = "FPS GAME";
        };

        RPG_LAYER {
            bindings = <
&none  &kp N1  &kp N2  &kp N3   &kp N4     &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp F1
&none  &kp Q   &kp W   &kp E    &kp R      &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P     &none
&none  &kp A   &kp S   &kp D    &kp F      &kp G   &kp H   &kp J   &kp K   &kp L   &kp SEMI  &to 0
               &none   &kp TAB  &kp SPACE  &trans  &trans  &mo 3   &mo 0   &none
            >;

            label = "RPG GAME";
        };

        ACAD_LAY {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "ACAD";
        };

        MAX3D_LAY {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "3DSMAX";
        };
    };
};
